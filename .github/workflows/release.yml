# Copied from https://github.com/hashicorp/terraform-provider-scaffolding-framework

# Terraform Provider release workflow.
name: Release

# This GitHub action creates a release when a tag that matches the pattern
# "v*" (e.g. v0.1.0) is created.
on:
  push:
    tags:
      - 'v*'

# Releases need permissions to read and write the repository contents.
# GitHub considers creating releases and uploading assets as writing contents.
permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@01dd5d3ca463c7f10f7f4f7b4f177225ac661ee4 # v6.1.0
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

            # TODO: use env: ... and printenv >> .release-env
      - run: |
          PACKAGE_NAME=github.com/dfinity/terraform-provider-ic
          GOLANG_CROSS_VERSION=v1.21.5

          echo 'GITHUB_TOKEN=${{secrets.GITHUB_TOKEN}}' >> .release-env
          echo 'GPG_FINGERPRINT=${{steps.import_gpg.outputs.fingerprint}}' >> .release-env
          echo 'PASSPHRASE=${{secrets.PASSPHRASE}}' >> .release-env
          #echo 'GPG_PRIVATE_KEY=${{secrets.GPG_PRIVATE_KEY}}' | sed 's/$/\\n/' | tr -d '\n' >> .release-env
          #echo 'CGO_ENABLED=1' >> .release-env

          echo .release-env >> .git/info/exclude

          docker run \
            --rm \
            --env CGO_ENABLED=1 \
            --env-file .release-env \
            --volume /var/run/docker.sock:/var/run/docker.sock \
            --volume `pwd`:/go/src/${PACKAGE_NAME} \
            --workdir /go/src/${PACKAGE_NAME} \
            ghcr.io/goreleaser/goreleaser-cross:${GOLANG_CROSS_VERSION} \
            build


            #
            #
            #release --clean
