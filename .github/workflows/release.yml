# Copied from https://github.com/hashicorp/terraform-provider-scaffolding-framework

# Terraform Provider release workflow.
name: Release

# This GitHub action creates a release when a tag that matches the pattern
# "v*" (e.g. v0.1.0) is created.
on:
  push:
    tags:
      - 'v*'

# Releases need permissions to read and write the repository contents.
# GitHub considers creating releases and uploading assets as writing contents.
permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0
            #      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
            #        with:
            #          go-version-file: 'go.mod'
            #          cache: true
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@01dd5d3ca463c7f10f7f4f7b4f177225ac661ee4 # v6.1.0
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - run: |
          PACKAGE_NAME=github.com/dfinity/terraform-provider-ic
          GOLANG_CROSS_VERSION=v1.19.5

          docker run \
            --rm \
            -e CGO_ENABLED=1 \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v `pwd`:/go/src/${PACKAGE_NAME} \
            -v `pwd`/sysroot:/sysroot \
            -w /go/src/${PACKAGE_NAME} \
            ghcr.io/goreleaser/goreleaser-cross:${GOLANG_CROSS_VERSION} \
            build


          # echo 'GITHUB_TOKEN=${{secrets.GITHUB_TOKEN}}' >> .release-env
          # echo 'GPG_FINGERPRINT=${{steps.import_gpg.outputs.fingerprint}}' >> .release-env
          # echo 'PASSPHRASE=${{secrets.PASSPHRASE}}' >> .release-env
          # echo 'GPG_PRIVATE_KEY=${{secrets.GPG_PRIVATE_KEY}}' >> .release-env
          # TODO: readd
          # --env-file .release-env \
                #release --clean
                #- name: Run GoReleaser
                #  uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8 # v5.0.0
                #  with:
                #    args: release --clean
                #  env:
                #    # GitHub sets the GITHUB_TOKEN secret automatically.
                #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                #    GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
